-
  function encode (str) {
    return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {
      return '%' + c.charCodeAt(0).toString(16);
    });
  }

  function map(array, iteratee) {
    let index = -1
    const length = array == null ? 0 : array.length
    const result = new Array(length)
    while (++index < length) {
      result[index] = iteratee(array[index], index, array)
    }
    return result
  }

  function getSrcset(pathImg, injectDir = '/', retinaSuffix = ['', '@2x']) {
    if (!pathImg) throw new Error('pathImg is not defined.')
    const { dir, base, name, ext } = parsePath(pathImg)
    return map(retinaSuffix, (suffix) => {
      if(suffix == '@large') {
        return `${ dir }${ injectDir }${ name }${ suffix }${ ext }`.trim()
      } else {
        return `${ dir }${ injectDir }${ name }${ suffix }${ ext } ${ suffix.substring(1) }`.trim()
      }
    })
  }

  function getWidth (img) {
    try {
      const width  = imageSize(`${ dest }/${ dirName }${ img.replace(/\.\.\//g, '') }`).width;
      return width
    } catch (e) {
      console.error(`${ dest }/${ dirName }${ img.replace(/\.\.\//g, '') } img not found.`)
    }
  }

  function getHeight (img) {
    try {
      const height = imageSize(`${ dest }/${ dirName }${ img.replace(/\.\.\//g, '') }`).height;
      return height
    } catch (e) { }
  }